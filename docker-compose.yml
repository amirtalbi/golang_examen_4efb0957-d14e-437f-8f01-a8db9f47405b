version: "3.8"

services:
  postgres:
    image: postgres:15
    platform: linux/amd64
    container_name: examen_go_postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: examen_go
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - examen_go_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  pgadmin:
    image: dpage/pgadmin4:latest
    platform: linux/amd64
    container_name: examen_go_pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "5050:80"
    depends_on:
      - postgres
    networks:
      - examen_go_network
    volumes:
      - pgadmin_data:/var/lib/pgadmin

  api:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: examen_go_api
    environment:
      SERVER_PORT: ${SERVER_PORT}
      JWT_SECRET: ${JWT_SECRET}
      TOKEN_EXPIRY_HOURS: 24
      API_PREFIX: ${API_PREFIX}
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USER: postgres
      DB_PASSWORD: postgres
      DB_NAME: examen_go
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - examen_go_network

networks:
  examen_go_network:
    driver: bridge

volumes:
  postgres_data:
  pgadmin_data:
